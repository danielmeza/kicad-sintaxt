name: Publish Extension

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Release Type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Package extension
        run: npm run package
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: "*.vsix"

  publish:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: vsix-package
          
      - name: Update version from git tag
        id: get-version
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # Extract version from release tag (format v0.0.0)
            TAG_NAME="${{ github.event.release.tag_name }}"
            # Remove 'v' prefix if present
            VERSION="${TAG_NAME#v}"
            # Update package.json with the version from git tag
            npm version $VERSION --no-git-tag-version --allow-same-version
            
            # Configure git
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            
            # Commit and push package.json changes
            git add package.json
            git commit -m "Update version to ${VERSION} from release tag"
            git push
            
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          else
            # For manual dispatch, use the version from package.json
            echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          fi
        
      - name: Publish to VS Code Marketplace
        run: npx @vscode/vsce publish -p ${{ secrets.VSCE_PAT }}
        
      - name: Update version and create tag for manual dispatch
        if: github.event_name == 'workflow_dispatch'
        run: |
          # Get new version based on release type
          NEW_VERSION=$(npm version ${{ github.event.inputs.releaseType }} --no-git-tag-version)
          # Remove quotes from version string
          NEW_VERSION="${NEW_VERSION//\"/}"
          
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Commit package.json changes
          git add package.json
          git commit -m "Bump version to ${NEW_VERSION}"
          
          # Create and push tag with v prefix
          git tag "v${NEW_VERSION}"
          git push && git push --tags
